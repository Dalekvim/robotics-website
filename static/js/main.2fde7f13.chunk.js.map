{"version":3,"sources":["components/Header.tsx","components/Layout.tsx","components/Struct.tsx","pages/Home.tsx","pages/About.tsx","pages/Comment.tsx","components/Member.tsx","pages/Contact.tsx","pages/Login.tsx","App.tsx","index.tsx"],"names":["Header","Navbar","bg","expand","to","replace","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","as","Layout","children","Container","Struct","title","importance","renderTitle","Home","Alert","variant","About","href","fetchQuery","query","variables","a","fetch","method","headers","body","JSON","stringify","res","json","fetchComments","data","comments","Comment","useState","value","setValue","loading","setLoading","setComments","refreshComments","useEffect","unmounted","postComment","content","comment","InputGroup","Prepend","Button","onClick","FormControl","aria-label","onChange","event","target","ListGroup","Spinner","animation","role","slice","reverse","map","_id","Item","Member","name","email","Card","Body","Title","Subtitle","Text","Contact","Login","Form","Group","controlId","Label","Control","type","placeholder","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fde7f13.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Link } from \"react-router-dom\";\n\nexport const Header: React.FC = () => {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Link to=\"/\" replace>\n        <Navbar.Brand>Robotics Club</Navbar.Brand>\n      </Link>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={Link} to=\"/about\" replace>\n            About\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/comment\" replace>\n            Comment\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/contact\" replace>\n            Contact Us\n          </Nav.Link>\n          <Nav.Link as={Link} to=\"/login\" replace>\n            Login\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n","import { Container } from \"react-bootstrap\";\nimport { Header } from \"./Header\";\n\nexport const Layout: React.FC = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <Container>{children}</Container>\n    </>\n  );\n};\n","interface IStructProps {\n  title: string;\n  importance: number;\n}\nexport const Struct: React.FC<IStructProps> = ({\n  title,\n  importance,\n  children,\n}) => {\n  // The line below was just used to supress an error caused by the case the where the input to switch was out of bounds.\n  let renderTitle: JSX.Element = <></>;\n  switch (importance) {\n    case 1:\n      renderTitle = <h1>{title}</h1>;\n      break;\n    case 2:\n      renderTitle = <h2>{title}</h2>;\n      break;\n    case 3:\n      renderTitle = <h3>{title}</h3>;\n      break;\n    case 4:\n      renderTitle = <h4>{title}</h4>;\n      break;\n    case 5:\n      renderTitle = <h5>{title}</h5>;\n      break;\n    case 6:\n      renderTitle = <h6>{title}</h6>;\n      break;\n  }\n  return (\n    <>\n      {renderTitle}\n      {children}\n    </>\n  );\n};\n","import { Alert } from \"react-bootstrap\";\nimport { Layout } from \"../components/Layout\";\nimport { Struct } from \"../components/Struct\";\n\nexport const Home: React.FC = () => {\n  return (\n    <Layout>\n      <Alert variant=\"danger\">\n        There is no good way to say this, but the robotics club is currently\n        very low on members.\n      </Alert>\n      <Struct title=\"The Robotics Club Website\" importance={1}>\n        <p className=\"lead\">Welcome to the brand new Robotics Club Website!</p>\n        <div className=\"text-justify\">\n          <p>\n            There is no one in this club, other than Mahir I guess, capable of\n            talking to actual humans, but if there were, they would be activally\n            be searching for new members:\n          </p>\n          <p>\n            <b>\n              If you have nothing to do during Friday lunch, feel free to pop\n              by!\n            </b>\n          </p>\n        </div>\n        <Struct title=\"FAQs\" importance={2}>\n          <Struct title=\"When and where is it?\" importance={3}>\n            <p>\n              The Robotics Club is on <i>nearly</i> every friday in Mrs\n              Nemaura's Room (C1.1), which is just down the corridor from the\n              hub.\n            </p>\n          </Struct>\n        </Struct>\n      </Struct>\n    </Layout>\n  );\n};\n","import { Layout } from \"../components/Layout\";\nimport { Struct } from \"../components/Struct\";\n\nexport const About: React.FC = () => {\n  return (\n    <Layout>\n      <Struct title=\"About this Website\" importance={1}>\n        <div className=\"Intro\">\n          <p className=\"lead\">\n            This website was made by Vimal Vinod, who refers to himself as 'I'\n            or 'me' depending on the situation.\n          </p>\n          <div className=\"text-justify\">\n            <p>\n              This website was made using the MERN stack; that's MongoDB,\n              Express, React and Node.js. Just to be clear, I am by no means an\n              expert on any of these and am seriously looking for help with the\n              backend.\n            </p>\n            <p>\n              If you happen to have some free time on your hands and want to\n              contribute to the website, contact me. You don't need to know\n              React, a bit of HTML should be enough, unless you want to help out\n              with the backend.\n            </p>\n            <p>Minimum requirements for a Backend Developer:</p>\n            <ul>\n              <li>Knows basic Javascript</li>\n              <li>Knows/willing to learn Node.js</li>\n            </ul>\n          </div>\n        </div>\n        <Struct title=\"Details\" importance={2}>\n          <div className=\"text-justify\">\n            <Struct title=\"Typescript\" importance={3}>\n              <p>\n                Typescript is an extension of Javascript that allows for types.\n                Any valid Javascript code is also Typescript code.\n              </p>\n              <p>\n                If you have only programmed in Python so far, or if you have not\n                programmed at all, you may wonder why I used Typescript.\n              </p>\n              <p>Are types that important?</p>\n              <p>\n                The answer to that question is yes. Although I haven't actually\n                used Vinalla Javascript enough to know how big the difference\n                is, I can see how knowing the types of things, and when they\n                don't match up, can save you tonnes of time.\n              </p>\n            </Struct>\n            <Struct title=\"Frontend\" importance={3}>\n              <p>\n                I just realised that most people don't really know what frontend\n                actually is - I mean, even though I talk big, I didn't know,\n                myself until I started making this.\n              </p>\n              <p>\n                <b>\n                  Basically, frontend is the stuff you guys see on this page.\n                </b>\n              </p>\n              <p>\n                The Frontend of this website was made using React which is a\n                Javascript library developed by Facebook.\n              </p>\n            </Struct>\n            <Struct title=\"Backend\" importance={3}>\n              <p>\n                I remember when I was first starting out trying to make an API,\n                I had no idea what I was doing because no one really had a good\n                definition of what an API was.\n              </p>\n              <p>\n                I'll try to explain what it is, but don't worry if you don't get\n                it right away.\n              </p>\n              <p>\n                <b>\n                  Basically, it's a page, or a bunch of pages with JSON on it.\n                </b>\n              </p>\n              <p>\n                The backend was created using Node.js and Express. Here is a\n                link to the API I created:{\" \"}\n                <a href=\"https://limitless-springs-67845.herokuapp.com\">\n                  limitless-springs\n                </a>\n                . It's a default name...\n              </p>\n            </Struct>\n            <Struct title=\"Database\" importance={3}>\n              <p>\n                I used the MongoDB database for this website, mostly because I\n                wanted to try out the MERN Stack.\n              </p>\n              <p>\n                The data base is basically for storing comments for the comment\n                section I am making.\n              </p>\n            </Struct>\n          </div>\n        </Struct>\n      </Struct>\n    </Layout>\n  );\n};\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport {\n  Alert,\n  InputGroup,\n  FormControl,\n  ListGroup,\n  Spinner,\n  Button,\n} from \"react-bootstrap\";\nimport { Layout } from \"../components/Layout\";\nimport { Struct } from \"../components/Struct\";\n\nconst fetchQuery = async (query: string, variables: {}): Promise<any> => {\n  const res = await fetch(\n    \"https://limitless-springs-67845.herokuapp.com/graphql\",\n    {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        query: query,\n        variables: variables,\n      }),\n    }\n  );\n  return res.json();\n};\n\nconst fetchComments = async () => {\n  const data = await fetchQuery(\n    `\n    query {\n      comments {\n        _id\n        content\n      }\n    }\n  `,\n    {}\n  );\n  return data.data.comments;\n};\n\ninterface ICommentState {\n  _id: string;\n  content: string;\n}\n\nexport const Comment: React.FC = () => {\n  const [value, setValue] = useState(\"\");\n\n  const handleChange = (event: ChangeEvent) => {\n    const target = event.target as HTMLTextAreaElement;\n    setValue(target.value);\n  };\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [comments, setComments] = useState<ICommentState[]>(() => []);\n\n  const refreshComments = async () => {\n    const comments: ICommentState[] = await fetchComments();\n    setComments(comments);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    let unmounted = false;\n    if (!unmounted) {\n      refreshComments();\n    }\n    return () => {\n      unmounted = true;\n    };\n  });\n\n  const postComment = async (content: string) => {\n    const comment = await fetchQuery(\n      `\n      mutation($content: String!) {\n        postComment(content: $content) {\n          _id\n          content\n        }\n      }\n    `,\n      { content: content }\n    );\n    setValue(\"\");\n    setComments([...comments, comment.data.postComment]);\n  };\n\n  return (\n    <Layout>\n      <Struct title=\"The Comment Section\" importance={1}>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <Button\n              variant=\"outline-secondary\"\n              onClick={() => {\n                postComment(value);\n              }}\n            >\n              Post\n            </Button>\n          </InputGroup.Prepend>\n          <FormControl\n            as=\"textarea\"\n            aria-label=\"With textarea\"\n            value={value}\n            onChange={handleChange}\n          />\n        </InputGroup>\n        <ListGroup>\n          {loading ? (\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          ) : (\n            comments\n              .slice()\n              .reverse()\n              .map(({ _id, content }) => (\n                <ListGroup.Item key={_id}>{content}</ListGroup.Item>\n              ))\n          )}\n        </ListGroup>\n      </Struct>\n    </Layout>\n  );\n};\n","import { Card } from \"react-bootstrap\";\n\ninterface IMemberProps {\n  name: string;\n  email: string;\n}\n\nexport const Member: React.FC<IMemberProps> = ({ name, email, children }) => {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>{name}</Card.Title>\n        <Card.Subtitle>{email}</Card.Subtitle>\n        <Card.Text>{children}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n","import { Layout } from \"../components/Layout\";\nimport { Member } from \"../components/Member\";\n\nexport const Contact: React.FC = () => {\n  return (\n    <Layout>\n      <h1>Contact Us</h1>\n      <div>\n        <Member name=\"Mahir Mansoor\" email=\"mmansoor@wigstonstudents.org\">\n          Enter Text Here.\n        </Member>\n        <Member name=\"Callum Chandler\" email=\"cchandler@wigstonstudents.org\">\n          Enter text Here.\n        </Member>\n        <Member name=\"Vimal Vinod\" email=\"vvinod@wigstonstudents.org\">\n          Second times is not the charm.\n        </Member>\n      </div>\n    </Layout>\n  );\n};\n","import Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport { Layout } from \"../components/Layout\";\nimport { Struct } from \"../components/Struct\";\n\nexport const Login: React.FC = () => {\n  return (\n    <Layout>\n      <Alert variant=\"info\">This page is under Construction.</Alert>\n      <Struct title=\"Login Page\" importance={1}>\n        <Form>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Struct>\n    </Layout>\n  );\n};\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { Home } from \"./pages/Home\";\nimport { About } from \"./pages/About\";\nimport { Comment } from \"./pages/Comment\";\nimport { Contact } from \"./pages/Contact\";\nimport { Login } from \"./pages/Login\";\n\nexport const App: React.FC = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/comment\" component={Comment} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/login\" component={Login} />\n    </HashRouter>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}